// this is how we should apply released plugin
//plugins {
//    id 'soramitsu'
//    id 'application'
//}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        dependencies {
            classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.21'
            classpath 'jp.co.soramitsu:sora-plugin:+'
        }
    }
}
// this is how we apply plugin for local dev
apply plugin: 'jp.co.soramitsu.sora-plugin'
apply plugin: 'application'
apply plugin: 'kotlin'

println("Hello from 03-kotlin-app")

// Define the main class for the application
mainClassName = 'example.App'
group = 'jp.co.soramitsu'
project.version = 'test'

dependencies {
    // Use the Kotlin test library.
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    // Use the Kotlin JUnit integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}


compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

// since we applied 'appliction', then we expect to have docker tasks enabled
// define path to packaged jar:
soramitsu {
    docker {
        jar = new File("build/libs/${project.name}-${project.version}.jar")
    }
}

// define main class in the manifest
jar {
    manifest {
        attributes 'Implementation-Version': archiveVersion,
                'Main-Class': 'example.App'
    }
}
